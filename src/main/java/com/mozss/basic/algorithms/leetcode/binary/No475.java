package com.mozss.basic.algorithms.leetcode.binary;

/**
 * @author mozss
 * @create 2019-09-06 8:28
 */
public class No475 {
    /**
     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     * @题目名称:   475.确定供暖半径
     * @知识考察:
     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     * @题目描述:
     *          冬季来临，你的任务是设计一个有固定加热半径的供暖器向所有的房屋供暖。
     *          现在，给出位于一条水平线上的房屋和供暖器的位置，找到可以覆盖所有房屋的最小加热半径。
     *          所以，你的输入将是房屋和供暖器的位置，你讲输出供暖的最小加热半径。
     *
     *          说明:
     *              1.给出的房屋和供暖器的书面是非负数且不会超过25000;
     *              2.给出的房屋和供暖器的位置均是非负数且不会超过10^9；
     *              3.只要房屋位于供暖器的半径内（包括在边缘上），它就可以得到供暖；
     *              4.所有供暖器都遵循你的半径标准，加热的半径也一样
     *
     *
     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     * eg 1>:
     * @输入Input:    [1,2,3] [2]
     * @输出Output:  1
     * @说明:     仅在2的位置上有一个供暖器,如果我们将加热半径设为1,那么所有的房屋就能得到供暖
     *
     * eg 2>:
     * @输入Input:    [1,2,3,4] [1,4]
     * @输出Output:   在位置1和4上有两个供暖器,我们需要把加热半径设为1,这样所有的房屋都能得到供暖
     * @说明:
     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     * @解题思路:
     * @题目总结:
     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     **/
    public int findRadius(int[] houses, int[] heaters) {
        int res = Integer.MIN_VALUE;
        for (int i = 0; i < houses.length; i++) {
            int max = Integer.MAX_VALUE;
            for (int j = 0; j < heaters.length; j++) {
                max = Math.min(max, Math.abs(houses[i] - heaters[j]));
            }
            res = Math.max(res, max);
        }
        return res;

    }


}
